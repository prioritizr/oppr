Package: oppr
Type: Package
Version: 1.0.4
Title: Optimal Project Prioritization
Description: A decision support tool for prioritizing conservation projects.
    Prioritizations can be developed by maximizing expected feature richness,
    expected phylogenetic diversity, the number of features that meet
    persistence targets, or identifying a set of projects that meet persistence
    targets for minimal cost. Constraints (e.g. lock in specific actions) and
    feature weights can also be specified to further customize prioritizations.
    After defining a project prioritization problem, solutions can be obtained
    using exact algorithms, heuristic algorithms, or random processes. In
    particular, it is recommended to install the 'Gurobi' optimizer (available
    from <https://www.gurobi.com>) because it can identify optimal solutions
    very quickly. Finally, methods are provided for comparing different
    prioritizations and evaluating their benefits. For more information, see
    Hanson et al. (2019) <doi:10.1111/2041-210X.13264>.
Authors@R:
    c(person(c('Jeffrey', 'O'), 'Hanson',
        email='jeffrey.hanson@uqconnect.edu.au', role = c('aut', 'cre'),
        comment = c(ORCID = '0000-0002-4716-6134')),
      person(c('Richard'), 'Schuster',
        email='mail@richard-schuster.com', role = c('aut'),
        comment = c(ORCID = '0000-0003-3191-7869')),
      person(c('Matthew'), 'Strimas-Mackey',
        email='mstrimas@gmail.com', role = c('aut'),
        comment = c(ORCID = '0000-0001-8929-7776')),
      person(c('Joseph', 'R'), 'Bennett',
        email='joseph.bennett@carleton.ca', role = c('aut'),
        comment = c(ORCID = '0000-0002-3901-9513')))
Imports:
    utils,
    methods,
    stats,
    Matrix,
    magrittr (>= 1.5),
    uuid (>= 0.1.2),
    proto (>= 1.0.0),
    cli (>= 1.0.1),
    assertthat (>= 0.2.0),
    tibble (>= 2.0.0),
    ape (>= 5.2),
    tidytree (>= 0.3.3),
    ggplot2 (>= 3.0.0),
    viridisLite (>= 0.3.0),
    lpSolveAPI (>= 5.5.2.0.17),
    withr (>= 2.4.1),
Suggests:
    testthat (>= 2.0.0),
    knitr (>= 1.20),
    roxygen2 (>= 6.1.0),
    rmarkdown (>= 1.10),
    gurobi (>= 8.0.0),
    ggtree (>= 2.4.2),
    Rsymphony (>= 0.1.28),
    lpsymphony (>= 1.10.0),
    shiny (>= 1.2.0),
    rhandsontable (>= 0.3.7),
    tidyr (>= 0.8.2)
Depends:
    R(>= 3.4.0)
LinkingTo:
    Rcpp (>= 0.12.19),
    RcppArmadillo (>= 0.9.100.5.0),
    RcppProgress (>= 0.4.1)
License: GPL-3
LazyData: true
SystemRequirements: C++11
URL: https://prioritizr.github.io/oppr/
BugReports: https://github.com/prioritizr/oppr/issues
VignetteBuilder: knitr
RoxygenNote: 7.2.1
Encoding: UTF-8
Collate:
    'internal.R'
    'pproto.R'
    'Parameter-proto.R'
    'ArrayParameter-proto.R'
    'MiscParameter-proto.R'
    'Parameters-proto.R'
    'ScalarParameter-proto.R'
    'parameters.R'
    'waiver.R'
    'ProjectModifier-proto.R'
    'Constraint-proto.R'
    'Collection-proto.R'
    'Decision-proto.R'
    'Id.R'
    'Objective-proto.R'
    'OptimizationProblem-proto.R'
    'OptimizationProblem-methods.R'
    'ProjectProblem-proto.R'
    'RcppExports.R'
    'Solver-proto.R'
    'Target-proto.R'
    'Weight-proto.R'
    'action_names.R'
    'add_absolute_targets.R'
    'add_binary_decisions.R'
    'add_default_solver.R'
    'add_feature_weights.R'
    'add_gurobi_solver.R'
    'add_heuristic_solver.R'
    'add_locked_in_constraints.R'
    'add_locked_out_constraints.R'
    'add_lpsolveapi_solver.R'
    'add_lpsymphony_solver.R'
    'tbl_df.R'
    'add_manual_targets.R'
    'add_manual_locked_constraints.R'
    'add_max_phylo_div_objective.R'
    'star_phylogeny.R'
    'add_max_richness_objective.R'
    'add_max_targets_met_objective.R'
    'add_min_set_objective.R'
    'add_random_solver.R'
    'add_relative_targets.R'
    'add_rsymphony_solver.R'
    'branch_matrix.R'
    'compile.R'
    'constraints.R'
    'data.R'
    'decisions.R'
    'feature_names.R'
    'magrittr-operators.R'
    'misc.R'
    'new_optimization_problem.R'
    'number_of_actions.R'
    'number_of_features.R'
    'number_of_projects.R'
    'objectives.R'
    'package.R'
    'solution_statistics.R'
    'plot.R'
    'plot_feature_persistence.R'
    'plot_phylo_persistence.R'
    'predefined_optimization_problem.R'
    'print.R'
    'problem.R'
    'project_cost_effectiveness.R'
    'project_names.R'
    'rake_phylogeny.R'
    'replacement_costs.R'
    'show.R'
    'simulate_ppp_data.R'
    'simulate_ptm_data.R'
    'solve.R'
    'solvers.R'
    'targets.R'
    'weights.R'
    'zzz.R'
Roxygen: list(markdown = TRUE)
