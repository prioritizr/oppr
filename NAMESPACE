# Generated by roxygen2: do not edit by hand

S3method(as.Id,character)
S3method(as.list,OptimizationProblem)
S3method(as.list,Parameters)
S3method(branch_matrix,default)
S3method(branch_matrix,phylo)
S3method(compile,ProjectProblem)
S3method(plot,ProjectProblem)
S3method(print,ArrayParameter)
S3method(print,Id)
S3method(print,OptimizationProblem)
S3method(print,ProjectModifier)
S3method(print,ProjectProblem)
S3method(print,ScalarParameter)
S3method(print,Solver)
export("%>%")
export("%T>%")
export(ArrayParameter)
export(Collection)
export(Constraint)
export(Decision)
export(MiscParameter)
export(Objective)
export(OptimizationProblem)
export(Parameter)
export(Parameters)
export(ProjectModifier)
export(ProjectProblem)
export(ScalarParameter)
export(Solver)
export(Target)
export(Weight)
export(add_absolute_targets)
export(add_binary_decisions)
export(add_default_solver)
export(add_feature_weights)
export(add_gurobi_solver)
export(add_heuristic_solver)
export(add_locked_in_constraints)
export(add_locked_out_constraints)
export(add_lpsolveapi_solver)
export(add_lpsymphony_solver)
export(add_manual_locked_constraints)
export(add_manual_targets)
export(add_max_phylo_div_objective)
export(add_max_richness_objective)
export(add_max_targets_met_objective)
export(add_min_set_objective)
export(add_random_solver)
export(add_relative_targets)
export(add_rsymphony_solver)
export(as.Id)
export(binary_matrix_parameter)
export(binary_parameter)
export(binary_parameter_array)
export(branch_matrix)
export(compile)
export(integer_parameter)
export(integer_parameter_array)
export(is.Id)
export(is.Waiver)
export(misc_parameter)
export(new_id)
export(new_optimization_problem)
export(new_waiver)
export(numeric_matrix_parameter)
export(numeric_parameter)
export(numeric_parameter_array)
export(parameters)
export(plot_feature_persistence)
export(plot_phylo_persistence)
export(pproto)
export(problem)
export(project_cost_effectiveness)
export(proportion_parameter)
export(proportion_parameter_array)
export(replacement_costs)
export(simulate_ppp_data)
export(simulate_ptm_data)
export(solution_statistics)
export(solve)
exportClasses(GurobiSolver)
exportClasses(HeuristicSolver)
exportClasses(LpsolveapiSolver)
exportClasses(LpsymphonySolver)
exportClasses(RandomSolver)
exportClasses(RsymphonySolver)
exportMethods(A)
exportMethods(action_names)
exportMethods(add_absolute_targets)
exportMethods(add_feature_weights)
exportMethods(add_locked_in_constraints)
exportMethods(add_locked_out_constraints)
exportMethods(add_manual_locked_constraints)
exportMethods(add_manual_targets)
exportMethods(add_relative_targets)
exportMethods(col_ids)
exportMethods(feature_names)
exportMethods(get_data)
exportMethods(lb)
exportMethods(modelsense)
exportMethods(number_of_actions)
exportMethods(number_of_branches)
exportMethods(number_of_features)
exportMethods(number_of_projects)
exportMethods(obj)
exportMethods(project_names)
exportMethods(pwlobj)
exportMethods(rhs)
exportMethods(row_ids)
exportMethods(sense)
exportMethods(solve)
exportMethods(ub)
exportMethods(vtype)
importClassesFrom(tibble,tbl_df)
importFrom(Matrix,solve)
importFrom(ape,plot.phylo)
importFrom(magrittr,"%>%")
importFrom(magrittr,"%T>%")
useDynLib(oppr, .registration = TRUE)
